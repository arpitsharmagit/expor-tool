{"version":3,"sources":["lib/model/Comment.js"],"names":[],"mappings":"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","file":"lib/model/Comment.js","sourcesContent":["'use babel';\r\n'use strict';\r\n\r\nvar ModelBase = require('./ModelBase'),\r\n    TimeUtil = require('../util/TimeUtil'),\r\n    helpers, schema;\r\n\r\n\r\nhelpers = {\r\n\tattributeSelector: function (key) {\r\n\t\treturn '.contentattribute *:has(.key:val(\"' + key + '\")) .value';\r\n\t},\r\n\ttestEqualTo: function (testValue) {\r\n\t\treturn function (val) { return val == testValue; };\r\n\t},\r\n\ttoInteger: function (val) {\r\n\t\treturn parseInt(val, 10);\r\n\t}\r\n};\r\n\r\n\r\nschema = {\r\n  commentId: {\r\n    revKey: 'commentId'\r\n  },\r\n  ciscoCommentId: {\r\n    type: 'string',\r\n    selector: '> .commentId'\r\n  },\r\n  videoId: {\r\n    type: 'string',\r\n    revKey: 'videoId'\r\n  },\r\n  text: {\r\n    required: true,\r\n    type: 'string',\r\n    selector: '> .commentText',\r\n    revTransform: function (value) {\r\n      let when = (new Date(this.when)).toDateString(),\r\n          timeline = (this.time) ? `[${this.time})] ` : '';\r\n      return `${timeline}On ${when} ${this.username} wrote:\\n${this.text}`;\r\n    },\r\n    revKey: 'text'\r\n  },\r\n  username: {\r\n    required: true,\r\n    type: 'string',\r\n    selector: '> .vpuser .username',\r\n    association: {\r\n\t\t\thasMany: false,\r\n\t\t\tmodel: 'User',\r\n\t\t\tkey: 'username'\r\n\t\t},\r\n    revKey: 'username'\r\n  },\r\n  when: {\r\n\t\ttype: 'datetime',\r\n\t\tselector: '> .createdTs .date',\r\n\t\ttransform: function (val) {\r\n\t\t\treturn new Date(parseInt(val, 10));\r\n\t\t},\r\n\t\trevKey: 'when'\r\n\t},\r\n  flagCount: {\r\n    type: 'int',\r\n    transform: helpers.toInteger,\r\n    selector: '> .flagCount',\r\n    optional: true\r\n  },\r\n  ipAddress: {\r\n    selector: '> .ipAddress',\r\n    optional: true\r\n  },\r\n  time: {\r\n    type: 'string',\r\n    selector: '> .time_index',\r\n    transform: function (value) {\r\n      var val = parseInt(value, 10) * 1000;\r\n      return TimeUtil.formatTimespan(val);\r\n    },\r\n    optional: true\r\n  }\r\n};\r\n\r\nclass Comment extends ModelBase {\r\n  constructor (data) {\r\n    super(data);\r\n\r\n  }\r\n\r\n  get isTimelineComment () {\r\n    return !!this.time;\r\n  }\r\n\r\n  static get className () {\r\n    return 'Comment';\r\n  }\r\n  static get vendorType () {\r\n    return ['vpbasicComment','vpinlineComment'];\r\n  }\r\n  static get revType () {\r\n    return 'comment';\r\n  }\r\n  static get schema () {\r\n    return schema;\r\n  }\r\n}\r\n\r\n// register model type with ModelBase registry\r\nComment.register();\r\n\r\nmodule.exports = Comment;\r\n"]}