{"version":3,"sources":["lib/model/index.js"],"names":[],"mappings":"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","file":"lib/model/index.js","sourcesContent":["'use babel';\r\n'use strict';\r\n\r\n\r\nvar _ = require('lodash'),\r\n    fs = require('fs'),\r\n    path = require('path'),\r\n    ModelBase = require('./ModelBase'),\r\n    Logger = require('../util/Logger'),\r\n    log = new Logger('model-index'),\r\n    hooks = {\r\n      beforeParseVendorObject: null,\r\n      afterParseVendorObject: function (obj, ModelClass) {\r\n        // remove array of categories instead of nested\r\n        if (ModelClass.name === 'Category') {\r\n          return _.unbubble(obj.flatten());\r\n        } else {\r\n          return obj;\r\n        }\r\n      }\r\n    };\r\n\r\n  _.mixin(require('../util/lodashMixins'));\r\n\r\n  function loadModelClasses () {\r\n    // require all model classes in directory\r\n    var modelClasses = {},\r\n        skipFiles = new Set(['index.js', 'ModelBase.js']),\r\n        files = fs.readdirSync(__dirname);\r\n\r\n    for (let file of files) {\r\n\r\n      // only load model class files\r\n      if (skipFiles.has(file)) { continue; }\r\n\r\n      let filepath = path.resolve(__dirname, file);\r\n      let ModelClass = require(filepath);\r\n\r\n      if (!ModelClass.className) {\r\n        log.log('not model class', file);\r\n        continue;\r\n      }\r\n      modelClasses[ModelClass.className] = ModelClass;\r\n    }\r\n\r\n    return modelClasses;\r\n  }\r\n\r\nfunction fromVendorObject (obj) {\r\n  var ModelClass = ModelBase.getModelForVendorType(obj);\r\n\r\n  if (!ModelClass) {\r\n    throw new Error('Unknown vendor type: ' + _.keys(obj).join(','));\r\n  }\r\n\r\n  if (hooks.beforeParseVendorObject) {\r\n    obj = hooks.beforeParseVendorObject(obj, ModelClass);\r\n  }\r\n\r\n  let result = ModelClass.fromVendorObject(obj);\r\n\r\n  if (hooks.afterParseVendorObject) {\r\n    result = hooks.afterParseVendorObject(result, ModelClass);\r\n  }\r\n  return result;\r\n\r\n}\r\nfunction fromPlainObject(obj, className) {\r\n  var ModelClass = ModelBase.getModelByClassName(className || obj.__model);\r\n  return ModelClass.fromJSON(obj);\r\n}\r\nfunction fromRev(obj, className) {\r\n\r\n}\r\n// default is to assume vendor?\r\nfunction model (input) {\r\n  if (_.isArray(input)) {\r\n    return _.map(input, model);\r\n  }\r\n  if (input.__model) {\r\n    return fromPlainObject(input);\r\n  }\r\n\r\n  return fromVendorObject(input);\r\n}\r\n\r\nlet loadedModelClasses = loadModelClasses();\r\n_.extend(model, {\r\n  fromVendor: fromVendorObject,\r\n  fromJSON: fromPlainObject,\r\n  fromRev: fromRev,\r\n  ModelBase: ModelBase\r\n}, loadedModelClasses);\r\n\r\nmodule.exports = model;\r\n"]}