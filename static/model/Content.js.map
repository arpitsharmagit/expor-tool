{"version":3,"sources":["lib/model/Content.js"],"names":[],"mappings":"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","file":"lib/model/Content.js","sourcesContent":["'use babel';\r\n'use strict';\r\n\r\nvar _ = require('lodash'),\r\n    ModelBase = require('./ModelBase'),\r\n    Category = require('./Category'),\r\n    Comment = require('./Comment'),\r\n    Attachment = require('./Attachment'),\r\n    UserGroup = require('./UserGroup'),\r\n    helpers, schema;\r\n\r\n_.mixin(require('../util/lodashMixins'));\r\n\r\nhelpers = {\r\n\tattributeSelector: function (key) {\r\n\t\treturn '.contentattribute *:has(.key:val(\"' + key + '\")) .value';\r\n\t},\r\n\ttestEqualTo: function (testValue) {\r\n\t\treturn function (val) { return val == testValue; };\r\n\t},\r\n\ttoInteger: function (val) {\r\n\t\treturn parseInt(val, 10);\r\n\t}\r\n};\r\n\r\nschema = {\r\n  vendorId: {\r\n\t\tselector: '> .id .ccsid'\r\n\t},\r\n  videoId: {\r\n\t\trevKey: 'id'\r\n\t},\r\n\ttitle: {\r\n\t\tselector: '> .title',\r\n\t\trevKey: 'title'\r\n\t},\r\n\tdescription: {\r\n\t\tselector: '> .description',\r\n\t\trevKey: 'description'\r\n\t},\r\n\ttags: {\r\n\t\ttype: 'object',\r\n\t\tselector: helpers.attributeSelector('tags'),\r\n\t\ttransform: function (val) {\r\n\t\t\treturn val ? val.split(/,\\W*/) : []; // split into array\r\n\t\t},\r\n\t\trevKey: 'tags',\r\n    default: []\r\n\t},\r\n\t// instances: 'notImplementedYet'\r\n\tauthor: {\r\n\t\tselector: '> .author .username',\r\n\t\tassociation: {\r\n\t\t\thasMany: false,\r\n\t\t\tmodel: 'User',\r\n\t\t\tkey: 'username'\r\n\t\t}\r\n\t},\r\n  uploaderUserId: {\r\n    revKey: 'uploaderUserId'\r\n  },\r\n\tcreatedBy: {\r\n\t\tselector: '> .createdby .username',\r\n\t\tassociation: {\r\n\t\t\thasMany: false,\r\n\t\t\tmodel: 'User',\r\n\t\t\tkey: 'username'\r\n\t\t},\r\n\t\trevKey: 'createdBy'\r\n\t},\r\n\twhenUploaded: {\r\n\t\ttype: 'datetime',\r\n\t\tselector: '> .lastpublisheddate .date',\r\n\t\ttransform: function (val) {\r\n\t\t\treturn new Date(parseInt(val, 10));\r\n\t\t},\r\n\t\trevKey: 'whenUploaded'\r\n\t},\r\n\r\n\t// providing relative url, since that's what the backup's gonna come frome\r\n\trelativeFilePath: {\r\n\t\tselector: '> .video > .videoasset > .relativefilepath',\r\n\t\toptional: true //,\r\n\t\t//revKey: 'videoKey'\r\n\t},\r\n\t// in case of external including this as well\r\n  linkedUrl: {\r\n\t\tselector: '> .video > .videoasset > .uri .urivalue',\r\n\t\ttransform: function (urls) {\r\n\t\t\tif (!Array.isArray(urls)) {\r\n\t\t\t\treturn urls;\r\n\t\t\t} else {\r\n\t\t\t\t// sorting will return http:// before rtmp://\r\n\t\t\t\treturn urls.sort()[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\toptional: true,\r\n\t\trevKey: 'externalUrl'\r\n\t},\r\n  thumbnailUri: {\r\n    revKey: 'thumbnailUri'\r\n  },\r\n\t// providing relative url, since that's what the backup's gonna come frome\r\n\t// NOTE: not creating full Model for thumbnail, because we'll only need the URL\r\n  vendorThumbnail: {\r\n\t\tselector: '> .contentthumbnail .imageasset > *',\r\n\t\ttransform: function (thumbnails) {\r\n\t\t\t// if single thumbnail instead of array\r\n\t\t\tif (!Array.isArray(thumbnails)) {\r\n\t\t\t\treturn thumbnails.relativefilepath;\r\n\t\t\t}\r\n\r\n\t\t\tthumbnails.sort(function (a, b) {\r\n\t\t\t\tvar sizeA = parseInt(a.width, 10) * parseInt(a.height, 10),\r\n\t\t\t\t\t\tsizeB = parseInt(b.width, 10) * parseInt(b.height, 10);\r\n\r\n\t\t\t\treturn (sizeA === sizeB) ? 0 : (sizeA > sizeB) ? -1 : 1;\r\n\t\t\t});\r\n\r\n\t\t\treturn thumbnails[0].relativefilepath;\r\n\t\t},\r\n\t\t//revKey: 'thumbnailUri',\r\n\t\tworkflow: 'copy thumbnail'\r\n\t}, // should fill in separately\r\n  transcript: {\r\n    __model: 'Attachment',\r\n    selector: '> .video > .transcript > .transcriptasset',\r\n    transform: function (val) {\r\n      return _.bubble(val).map(Attachment.fromVendorObject.bind(Attachment));\r\n    },\r\n\t\toptional: true\r\n  },\r\n\tduration: {\r\n\t\ttype: 'int',\r\n\t\tselector: helpers.attributeSelector('duration'),\r\n\t\ttransform: helpers.toInteger,\r\n\t\trevKey: 'duration'\r\n\t},\r\n  isLive: {\r\n    type: 'boolean',\r\n    selector: '> .video .live',\r\n    transform: helpers.testEqualTo('true'),\r\n    optional: true\r\n  },\r\n\tformatType: {\r\n\t\tselector: helpers.attributeSelector('encoding'),\r\n\t\ttransform: function (val) {\r\n\t\t\treturn val; // \"h264\" so far...\r\n\t\t},\r\n    optional: true,\r\n\t\trevKey: 'formatType'\r\n\t},\r\n\tcontainerType: {\r\n\t\tselector: helpers.attributeSelector('videoformat'),\r\n\t\ttransform: function (val) {\r\n\t\t\tif (val === 'MPEG') {\r\n\t\t\t\treturn 'MP4';\r\n\t\t\t} else {\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t},\r\n    optional: true,\r\n\t\trevKey: 'containerType'\r\n\t},\r\n\t// for nonlinear destructive editing\r\n\ttranscode: {\r\n\t\tselector: '> .edl',\r\n\t\toptional: true,\r\n\t\tworkflow: 'transcode video'\r\n\t\t// returns xml, keep as string for now\r\n\t},\r\n\r\n\t// TODO: how to store attachments, what's the schema?\r\n\tattachments: {\r\n    __model: 'Attachment',\r\n\t\tselector: '> .attachment',\r\n\t\t// transform: not transforming yet, but probably should\r\n    transform: function (val) {\r\n      return _.bubble(val).map(Attachment.fromVendorObject.bind(Attachment));\r\n    },\r\n    /*revTransform: function (attachments) {\r\n      return _.map(attachments, (attachment) => attachment.toRevData.call(attachment));\r\n    },*/\r\n\t\toptional: true,\r\n    revKey: 'mediaContent',\r\n    default: [],\r\n\t\tworkflow: 'copy attachments'\r\n\t},\r\n\tviews: {\r\n\t\ttype: 'int',\r\n\t\tselector: helpers.attributeSelector('viewCount'),\r\n\t\ttransform: helpers.toInteger\r\n\t},\r\n\taverageRating: {\r\n\t\ttype: 'int',\r\n\t\tselector: helpers.attributeSelector('rating'),\r\n\t\ttransform: helpers.toInteger\r\n\t},\r\n\tratingCount: {\r\n\t\ttype: 'int',\r\n\t\tselector: helpers.attributeSelector('ratingCount'),\r\n\t\ttransform: helpers.toInteger\r\n\t},\r\n\tfilesize: {\r\n\t\ttype: 'int',\r\n\t\tselector: helpers.attributeSelector('size'),\r\n\t\ttransform: helpers.toInteger\r\n\t},\r\n\tcommentCount: {\r\n\t\ttype: 'int',\r\n\t\tselector: helpers.attributeSelector('discussedCount'),\r\n\t\ttransform: helpers.toInteger,\r\n\t\tworkflow: 'get comments'\r\n\t},\r\n\t//downloadingEnabled: 'notImplemented',\r\n\t// this could be 'hiddenflag', 'contentstate', or pulled from categories\r\n\tenableTags: {\r\n\t\ttype: 'boolean',\r\n\t\tselector: helpers.attributeSelector('allowTags'),\r\n\t\ttransform: helpers.testEqualTo('true')\r\n\t},\r\n\tenableComments: {\r\n\t\ttype: 'boolean',\r\n\t\tselector: helpers.attributeSelector('allowComments'),\r\n\t\ttransform: helpers.testEqualTo('true'),\r\n\t\trevKey: 'commentsEnabled'\r\n\t},\r\n\tenableAnonymousComments: {\r\n\t\ttype: 'boolean',\r\n\t\tselector: helpers.attributeSelector('allowAnonymousComments'),\r\n\t\ttransform: helpers.testEqualTo('true'),\r\n\t\toptional: true\r\n\t},\r\n\tenableRatings: {\r\n\t\ttype: 'boolean',\r\n\t\tselector: helpers.attributeSelector('allowRatings'),\r\n\t\ttransform: helpers.testEqualTo('true'),\r\n\t\t// FIXME: don't know what this actually is via REST API\r\n\t\trevKey: 'ratingsEnabled',\r\n    default: true\r\n\t},\r\n\tenableDownloads: {\r\n\t\trevKey: 'downloadingEnabled',\r\n    default: false\r\n\t},\r\n\t//enableRecommendations: 'notImplemented',\r\n\t// enableCategories: 'notImplemented',\r\n\r\n  /* PERMISSIONS */\r\n  isActive: {\r\n    type: 'boolean',\r\n    selector: '> .hiddenflag',\r\n    transform: helpers.testEqualTo('false'),\r\n    revKey: 'isActive',\r\n    default: true\r\n\t},\r\n  accessControl: {\r\n    revKey: 'accessControl',\r\n    default: 'Public',\r\n    revTransform: function (value) {\r\n      if (this.usergroups && this.usergroups.length) {\r\n        return 'Private';\r\n      } else {\r\n        return 'Public';\r\n      }\r\n    }\r\n  },\r\n  categories: {\r\n    __model: 'Category',\r\n    type: 'object',\r\n    default: [],\r\n    selector: '> .groupscontainingcontent',\r\n    transform: function (value) {\r\n      return _.bubble(value).map(Category.fromVendorObject.bind(Category));\r\n    },\r\n    revTransform: function (value) {\r\n      return _(value).bubble()\r\n          .pluck('categoryId')\r\n          .filter(_.identity).value();\r\n    },\r\n    optional: true,\r\n    revKey: 'categoryIds'\r\n  },\r\n  // TODO: need to create Comment model\r\n  comments: {\r\n    __model: 'Comment',\r\n    type: 'object',\r\n    default: [],\r\n    selector: '> .comment',\r\n    transform: function (value) {\r\n      var result = _.bubble(value).map(Comment.fromVendorObject.bind(Comment));\r\n      return _.flatten(result);\r\n    },\r\n    /*revTransform: function (comments) {\r\n      return _.map(_.bubble(comments), (comment) => comment.toRevData.call(comment));\r\n    },*/\r\n    optional: true,\r\n    revKey: 'comments'\r\n  },\r\n  usergroups: {\r\n    __model: 'UserGroup',\r\n    type: 'object',\r\n    default: [],\r\n    selector: '> .viewers .usergroup',\r\n    transform: function (value) {\r\n      return _.bubble(value).map(UserGroup.fromVendorObject.bind(UserGroup));\r\n    },\r\n    optional: true,\r\n    revKey: 'accessControlEntities',\r\n    /*revTransform: function (teams) {\r\n      return _.map(_.bubble(teams), (team) => team.toRevData.call(team));\r\n    }*/\r\n  },\r\n  vendorInstances: {\r\n    type: 'object',\r\n    selector: '> .video .videoasset',\r\n    transform: function (assets) {\r\n      assets = _.bubble(assets);\r\n      return assets.map( function (asset) {\r\n        // get first http url available (or none)\r\n        let url = _(asset.uri)\r\n              .bubble().pluck('urivalue')\r\n              .find( (url) => /^http/.test(url) );\r\n\r\n        return {\r\n          bitrate: helpers.toInteger(asset.bitrate),\r\n          width: helpers.toInteger(asset.width),\r\n          height: helpers.toInteger(asset.height),\r\n          size: helpers.toInteger(asset.filesize),\r\n          relativeFilePath: asset.relativefilepath,\r\n          url: url\r\n        };\r\n      });\r\n    },\r\n    optional: true\r\n  },\r\n\r\n  pulseAnalytics: {\r\n    type: 'object',\r\n    selector: '> .video .mediaAnalytics',\r\n    optional: true\r\n  }\r\n\r\n};\r\n\r\nlet defaultContent = {\r\n  accessControl: 'Public',\r\n  accessControlEntities: [],\r\n  categoryIds: [],\r\n  commentsEnabled: true,\r\n  description: '',\r\n  downloadingEnabled: false,\r\n  isActive: true,\r\n  linkedUrl: null,\r\n  mediaContent: [],\r\n  ratingsEnabled: true,\r\n  tags: [],\r\n  thumbnailUri: null\r\n  //title: '' not setting title to make sure that *some* metadata gets added\r\n};\r\n\r\n// TODO: this assumes data's either coming from db or Cisco.  Do I need a method of detecting Rev data for import?\r\nclass Content extends ModelBase {\r\n  constructor (data) {\r\n    super(data);\r\n\r\n  }\r\n  // sorts the available instances and gets the best quality one\r\n  // only local is default -- only gets instances that have file in backup\r\n  hasInstances () {\r\n    return !_.isEmpty(this.vendorInstances);\r\n  }\r\n  getBestInstance (onlyLocal = true) {\r\n    let whereFn = onlyLocal ? _.property('relativeFilePath') : _.noop;\r\n\r\n    return _(this.vendorInstances)\r\n      .where(whereFn)\r\n      .sortByAll(['size', 'bitrate', 'width', 'height'])\r\n      .last();\r\n  }\r\n  getInstanceAtWidth (width, onlyLocal = true) {\r\n    let whereFn = onlyLocal ? _.property('relativeFilePath') : _.noop;\r\n    return _(this.vendorInstances)\r\n    .where(whereFn)\r\n      .sortBy( (instance) => Math.abs(width - instance.width) )\r\n      .first();\r\n  }\r\n  static get default () {\r\n    return defaultContent;\r\n  }\r\n\r\n  static get className () {\r\n    return 'Content';\r\n  }\r\n  static get vendorType () {\r\n    return 'vpcontent';\r\n  }\r\n  static get revType () {\r\n    return 'video';\r\n  }\r\n  static get schema () {\r\n    return schema;\r\n  }\r\n}\r\n\r\nContent.register();\r\n\r\nmodule.exports = Content;\r\n"]}